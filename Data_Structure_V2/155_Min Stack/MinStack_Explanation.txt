ржЖржкржирж╛рж░ ржЖрж╕рж▓ рж▓ржХрзНрж╖рзНржп рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж┐ **Stack** ржмрж╛ржирж╛ржирзЛ ржпрзЗржЦрж╛ржирзЗ рж╢рзБржзрзБ `Push`, `Pop`, `Top` ржЗ ржирж╛, ржмрж░ржВ **ржпрзЗржХрзЛржирзЛ рж╕ржорзЯ ржорж┐ржирж┐ржорж╛ржо ржнрзНржпрж╛рж▓рзБ O(1) ржЯрж╛ржЗржорзЗ ржмрзЗрж░ ржХрж░рж╛ ржпрж╛ржмрзЗ**ред  

## ЁЯЯв Efficient рж╕ржорж╛ржзрж╛ржи тАФ Two Stack Approach  
ржЖржорж░рж╛ рзиржЯрж╛ stack ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐:  
1. **stack** тЖТ normal ржнрзНржпрж╛рж▓рзБ рж░рж╛ржЦржмрзЗ  
2. **minStack** тЖТ ржкрзНрж░рждрж┐ржмрж╛рж░рзЗрж░ ржЬржирзНржп ржмрж░рзНрждржорж╛ржи ржорж┐ржирж┐ржорж╛ржо ржнрзНржпрж╛рж▓рзБ track ржХрж░ржмрзЗ  

---

### ЁЯФ╣ Push(val)
- ржкрзНрж░ржержорзЗ `stack.Push(val)` ржХрж░рж┐ (ржнрзНржпрж╛рж▓рзБ main stack-ржП ржврзБржХрж▓рзЛ)  
- рждрж╛рж░ржкрж░ `minStack` ржжрзЗржЦрж┐:  
  - ржпржжрж┐ `minStack` ржлрж╛ржБржХрж╛ ржерж╛ржХрзЗ ржмрж╛ `val <= minStack.Peek()` рж╣рзЯ, рждрж╛рж╣рж▓рзЗ `minStack.Push(val)`  

ЁЯСЙ ржПрж░ ржорж╛ржирзЗ, `minStack` рж╕ржмрж╕ржорзЯ ржПржЦржи ржкрж░рзНржпржирзНржд ржЫрзЛржЯ ржнрзНржпрж╛рж▓рзБржЧрзБрж▓рзЛ ржзрж░рзЗ рж░рж╛ржЦржмрзЗред  

---

ЁЯФ╣ Pop()
- `stack.Pop()` ржХрж░рж┐  
- ржпржжрж┐ pop рж╣ржУрзЯрж╛ ржнрзНржпрж╛рж▓рзБржЯрж╛ `minStack.Peek()` ржПрж░ рж╕ржорж╛ржи рж╣рзЯ, рждрж╛рж╣рж▓рзЗ `minStack.Pop()` ржУ ржХрж░рж┐  
ЁЯСЙ ржХрж╛рж░ржг ржУржЗ ржнрзНржпрж╛рж▓рзБ ржорж┐ржирж┐ржорж╛ржо ржЫрж┐рж▓, рждрж╛ржЗ рждрж╛ржХрзЗ `minStack` ржерзЗржХрзЗржУ ржмрзЗрж░ ржХрж░рждрзЗ рж╣ржмрзЗред  

---

ЁЯФ╣ Top()
- `stack.Peek()` рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рж┐ тЖТ ржПржЯрж╛ржЗ ржЙржкрж░рзЗрж░ ржнрзНржпрж╛рж▓рзБ  

---

ЁЯФ╣ GetMin()
- `minStack.Peek()` рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рж┐ тЖТ ржХрж╛рж░ржг `minStack` рж╕ржмрж╕ржорзЯ ржмрж░рзНрждржорж╛ржи ржорж┐ржирж┐ржорж╛ржо ржзрж░рзЗ рж░рж╛ржЦржЫрзЗред  

